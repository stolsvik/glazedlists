defaultTasks 'test', 'jar'

// The Gradle Wrapper generation task.
task wrapper(type: Wrapper) { gradleVersion = "2.3" }



// ------------------------------------------------
// -- Maven

apply plugin: 'maven'

group = 'net.java.dev.glazedlists'
version = '1.9.1-SNAPSHOT'

// ------------------------------------------------

apply plugin: 'java'
sourceCompatibility = JavaVersion.VERSION_1_8
sourceSets {
    main {
        java { srcDir 'source' }
        resources { srcDir 'source' }
    }
}
project.buildDir = 'build-gradle'
jar {
    manifest {
        attributes 'Implementation-Title': 'GlazedLists',
                   'Implementation-Version': version
    }
}

// ------------------------------------------------
// -- Maven Publish

apply from: 'publish.gradle'


// ------------------------------------------------
// -- Project specific stuff

// ------------------------------------------------
// -- Boring shit, should be a plugin.

task systemInformation << {
    println "\n** Java properties [System.getProperties()], sorted:\n"
    System.properties.sort().each { k, v ->
        println("$k = $v")
    }
    println "\n** Environment [System.getenv()], sorted:\n"
    System.env.sort().each { k, v ->
        println("$k = $v")
    }
    println ''
    println "** Java Version:   "+System.getProperty("java.version")
    println "** Groovy Version: "+groovy.lang.GroovySystem.getVersion()
    println "** Gradle Version: "+gradle.gradleVersion
}

apply plugin: 'eclipse'
// Always start from scratch.
tasks.eclipse.dependsOn(cleanEclipse)
eclipse {
    project { natures 'org.springsource.ide.eclipse.gradle.core.nature'; }
    classpath {
        defaultOutputDir = file('build-eclipse')

        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'

        file {
            // Remove the default added classpath entry "Eclipse-default JRE"
            whenMerged { classpath ->
                // Remove the one we don't want - the default one (since we add a specific, cannot have both).
                classpath.entries.removeAll { entry ->
                    entry.kind == "con" && entry.path == "org.eclipse.jdt.launching.JRE_CONTAINER"
                }
                // Just dump the entries so that we can see them
                classpath.entries.findAll { entry ->
                    println("Entry:"+ entry);
                }
            }
        }
    }
}
